/* 
   Auto-generated by Spline
*/

import useSpline from "@splinetool/r3f-spline";
import { OrthographicCamera } from "@react-three/drei";
import clickSound from './mixkit-single-key-type-2533.wav'

const buttonDelta = 20

function click(e , delta) {
  console.log(e)
  const group = e.object.parent;
  group.position.y += delta;
}

function playAudio() {
  const sound = new Audio(clickSound)
  sound.play()
  sound.volume = generateRandomFloat(0.0, 0.07)
}

function generateRandomFloat(low, high) {
  return low + Math.random() * (high - low)
}

export default function Scene({...props}) {
   const {nodes, materials} = useSpline("https://prod.spline.design/KV-M60sdL1dzheaP/scene.splinecode")

   // const spline = useSpline("https://prod.spline.design/KV-M60sdL1dzheaP/scene.splinecode")

   console.log(nodes, materials)
   // console.log(spline)
  return(
   <>
   <color attach="background" args={["#ccdaed"]}/>
   <group {...props} dispose={null}>
     <pointLight 
       name="Point Light 5" 
       intensity={1.15} 
       distance={2000} 
       shadow-mapSize-width={1024}
       shadow-mapSize-height={1024}
       shadow-camera-near={100}
       shadow-camera-far={100000}
       color="#78defe"
       position={[-725.68, 821.12, 720.01]}
     />

     <pointLight
       name="Point Light 4" 
       intensity={1.15} 
       distance={2000} 
       shadow-mapSize-width={1024}
       shadow-mapSize-height={1024}
       shadow-camera-near={100}
       shadow-camera-far={100000}
       color="#bd77fe"
       position={[1095.47, 613.81, -174.31]}
     />
     <mesh 
       name="Rectangle 2"
       geometry={nodes["Rectangle 2"].geometry}
       material={materials["Rectangle 2 Material"]}
       castShadow
       receiveShadow
       position={[320.48, -136.3, 100.51]}
       rotation={[-Math.PI / 2, 0, 0]}
       scale={[1.2, 1.41, 0.35]}
     />
     <mesh 
       name="Rectangle"
       geometry={nodes.Rectangle.geometry}
       material={materials["Rectangle Material"]}
       castShadow
       receiveShadow
       position={[320.9, -147.35, 99.51]}
       rotation={[-Math.PI / 2, 0, 0]}
       scale={[1.2, 1.41, 1]}
     />
   
   <group
     name="ESC"
     position={[-92.46, -22.75, -92.19]}
     onPointerOver={(e) => {
      click(e, -buttonDelta);
      playAudio()
     }}
     onPointerOut={(e) => {click(e, buttonDelta)}}
     >
      <mesh
        name="Text"
        geometry={nodes.Text.geometry}
        material={materials["Text Material"]}
        castShadow
        receiveShadow
        position={[-2.07, 63.68, -15.48]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        name="Cube"
        geometry={nodes.Cube.geometry}
        material={materials["Key Orange"]}
        castShadow
        receiveShadow
        position={[-1.17, 22.75, 0]}
        scale={[0.99, 1, 1]}
      />
   </group>

   <group
      name="1"
      position={[91.33, -22.75, -93]}
      // onPointerOver={() => {}}
      // onPointerOut={() => {}}
   >
      <mesh 
      name="Text3"
      geometry={nodes.Text3.geometry}
      material={materials["Text3 Material"]}
      castShadow
      receiveShadow
      position={[25.74, 63.68, 13.52]}
      rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh 
       name="Cube3"
       geometry={nodes.Cube3.geometry}
       material={materials.Key}
       castShadow
       receiveShadow
       position={[-3.54, 22.75, 0]}
       scale={[0.99, 1, 1]}
      />
   </group>

   <group
      name="2"
      position={[257.98, -22.75, -93]}
      // onPointerOver={() => {}}
      // onPointerOut={() => {}}
   >
      <mesh 
      name="Text2"
      geometry={nodes.Text2.geometry}
      material={materials["Text2 Material"]}
      castShadow
      receiveShadow
      position={[41.53, 63.68, 14.52]}
      rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh 
       name="Cube2"
       geometry={nodes.Cube2.geometry}
       material={materials.Key}
       castShadow
       receiveShadow
       position={[12.77, 22.75, 0]}
       scale={[0.99, 1, 1]}
      />
   </group>

   <group
       name="3"
       position={[425.37, -22.75, -93]}
      //  onPointerOver={() => {
           
      //     }}
      //  onPointerOut={() => {}}   
   >
     <mesh 
       name="Text1"
       geometry={nodes.Text1.geometry}
       material={materials["Text1 Material"]}
       castShadow
       receiveShadow
       position={[58.58, 63.68, 14.52]}
       rotation={[-Math.PI / 2, 0, 0]}
     />
     <mesh
       name="Cube1"
       geometry={nodes.Cube1.geometry}
       material={materials.Key}
       castShadow
       receiveShadow
       position={[29.15, 22.75, 0]}
       scale={[0.99, 1, 1]}
     />
   </group>

   <group
    name="Arrow 6"
    position={[164.96, -22.75, 96.99]}
   >
     <mesh 
       name="Text 41"
       geometry={nodes["Text 41"].geometry}
       material={materials["Text 41 Material"]}
       castShadow
       receiveShadow
       position={[-1.84, 65.13, 0.73]}
       rotation={[-Math.PI / 2, 0, 0]}
       scale={[0.98, 1, 1]}
     />
     <mesh
       name="Cube"
       geometry={nodes.Cube7.geometry}
       material={materials.Key}
       castShadow
       receiveShadow
       position={[0, 22.75, 0]}
     />
   </group>

   <group
     name="Enter"
     position={[728.27, -22.75, -75.04]}
     rotation={[0, -Math.PI / 2, 0]}
     onPointerOver={(e) => {
       click(e, -buttonDelta)
       playAudio()
     }}
     onPointerOut={(e) => {
       click(e, buttonDelta)
       playAudio()
     }}
     >
      <mesh
        name="Text 4"
        geometry={nodes
        ["Text 4"].geometry}
        material={materials["Text 4 Material"]}
        castShadow
        receiveShadow
        position={[1.1, 65.13, 61.41]}
        rotation={[-Math.PI / 2, 0, Math.PI / 2]}
        scale={[0.98, 1, 1]}
      />
       <mesh
        name="Cube 4"
        geometry={nodes
        ["Cube 4"].geometry}
        material={materials.Enter}
        castShadow
        receiveShadow
        position={[79.04, 27.25, 0.54]}
        rotation={[-Math.PI / 2, 0, Math.PI / 2]}
      />
   </group>

   <group
     name="D"
     position={[353.29, -22.75, 96.99]}
    //  onPointerOver={(e) => {
    //   click(e, -buttonDelta);
    //   playAudio();
    //  }}
    //  onPointerOut
   >
     <mesh
       name="Text 42"
       geometry={nodes["Text 42"].geometry}
       material={materials["Text 42 Material"]}
       castShadow
       receiveShadow
       position={[-1.4, 65.13, 0.73]}
       rotation={[-Math.PI / 2, 0, 0]}
       scale={[0.98, 1, 1]}
     />
     <mesh
       name="Cube8"
       geometry={nodes.Cube8.geometry}
       material={materials.Key}
       castShadow
       receiveShadow
       position={[0, 22.75, 0]}
     />
   </group>

   <group
     name="Tab"
     position={[-89.17, -22.75, 98.19]}
     onKeyPress={(e) => console.log(e)}
     onPointerOver={(e) => {
            click(e, -buttonDelta);
            playAudio();
     }}
     onPointerOut={(e) => click(e, buttonDelta)}
     scale={[0.98, 1, 1]}
   >
     <mesh
       name="Text4"
       geometry={nodes.Text4.geometry}
       material={materials["Text4 Material"]}
       castShadow
       receiveShadow
       position={[-0.82, 65.13, 16.71]}
       rotation={[-Math.PI / 2, 0, 0]}
     />
     <mesh
       name="Cube10"
       geometry={nodes.Cube10.geometry}
       material={materials.Key}
       castShadow
       receiveShadow
       position={[35.75, 22.75, 0]}
     />
   </group>

   <group
     name="Shift"
     position={[-93.02, -22.75, 286.61]}
    //  onKeyPress={(e) => console.log(e)}
    //  onPointerOver={(e) => {
    //         click(e, -buttonDelta);
    //         playAudio();
    //  }}
    //  onPointerOut={(e) => click(e, buttonDelta)}
     scale={[0.98, 1, 1]}
   >
     <mesh
       name="Text5"
       geometry={nodes.Text5.geometry}
       material={materials["Text5 Material"]}
       castShadow
       receiveShadow
       position={[-0.82, 65.13, 16.71]}
       rotation={[-Math.PI / 2, 0, 0]}
     />
     <mesh
       name="Cube11"
       geometry={nodes.Cube11.geometry}
       material={materials["Key Green"]}
       castShadow
       receiveShadow
       position={[131.26, 22.75, 0]}
     />
   </group>

    <group
     name="Arrow Up"
     position={[541.88, -22.75, 96.99]}
    //  onKeyPress={(e) => console.log(e)}
    //  onPointerOver={(e) => {
    //         click(e, -buttonDelta);
    //         playAudio();
    //  }}
    //  onPointerOut={(e) => click(e, buttonDelta)}
   >
     <mesh
       name="Shape 23"
       geometry={nodes["Shape 23"].geometry}
       material={materials["Shape 23 Material"]}
       castShadow
       receiveShadow
       position={[-3.95, 61.22, -1.74]}
       rotation={[-Math.PI / 2, 0, 0]}
       scale={1}
     />
     <mesh
       name="Cube9"
       geometry={nodes.Cube9.geometry}
       material={materials.Key}
       castShadow
       receiveShadow
       position={[0, 22.75, 0]}
     />
   </group>

  <group
     name="Arrow Down"
     position={[541.88, -22.75, 287.83]}
     rotation={[-Math.PI, 0, -Math.PI]}
    //  onKeyPress={(e) => console.log(e)}
    //  onPointerOver={(e) => {
    //         click(e, -buttonDelta);
    //         playAudio();
    //  }}
    //  onPointerOut={(e) => click(e, buttonDelta)}
   >
     <mesh
       name="Shape 22"
       geometry={nodes["Shape 22"].geometry}
       material={materials["Shape 22 Material"]}
       castShadow
       receiveShadow
       position={[-3.95, 61.22, -1.74]}
       rotation={[-Math.PI / 2, 0, 0]}
       scale={1}
     />
     <mesh
       name="Cube6"
       geometry={nodes.Cube6.geometry}
       material={materials.Key}
       castShadow
       receiveShadow
       position={[0, 22.75, 0]}
     />
   </group>

  <group
     name="Arrow Right"
     position={[730.27, -22.75, 287.83]}
     rotation={[0, -Math.PI / 2, 0]}
    //  onKeyPress={(e) => console.log(e)}
    //  onPointerOver={(e) => {
    //         click(e, -buttonDelta);
    //         playAudio();
    //  }}
    //  onPointerOut={(e) => click(e, buttonDelta)}
   >
     <mesh
       name="Shape 21"
       geometry={nodes["Shape 21"].geometry}
       material={materials["Shape 21 Material"]}
       castShadow
       receiveShadow
       position={[-3.95, 61.22, -1.74]}
       rotation={[-Math.PI / 2, 0, 0]}
       scale={1}
     />
     <mesh
       name="Cube5"
       geometry={nodes.Cube5.geometry}
       material={materials.Key}
       castShadow
       receiveShadow
       position={[0, 22.75, 0]}
     />
   </group>

  <group
     name="Arrow Left"
     position={[356.15, -22.75, 287.83]}
     rotation={[0, Math.PI / 2, 0]}
    //  onKeyPress={(e) => console.log(e)}
    //  onPointerOver={(e) => {
    //         click(e, -buttonDelta);
    //         playAudio();
    //  }}
    //  onPointerOut={(e) => click(e, buttonDelta)}
   >
     <mesh
       name="Shape 2"
       geometry={nodes["Shape 2"].geometry}
       material={materials["Shape 2 Material"]}
       castShadow
       receiveShadow
       position={[-3.95, 61.22, -1.74]}
       rotation={[-Math.PI / 2, 0, 0]}
       scale={1}
     />
     <mesh
       name="Cube4"
       geometry={nodes.Cube4.geometry}
       material={materials.Key}
       castShadow
       receiveShadow
       position={[0, 22.75, 0]}
     />
   </group>

   <directionalLight
     name="Directional Light"
     castShadow
     intensity={0.7}
     shadow-mapSize-width={1024}
     shadow-mapSize-height={1024}
     shadow-camera-near={-10000}
     shadow-camera-far={10000}
     shadow-camera-left={500}
     shadow-camera-right={500}
     shadow-camera-top={500}
     shadow-camera-bottom={-500}
     position={[-250.16, 176.86, 90.32]}
   />

   {/* <directionalLightHelper
    
   /> */}

   <OrthographicCamera
   name="4"
   makeDefault={true}
   zoom={0.54}
   far={100000}
   near={-100000}
   position={[392.08, 1501.42, 1460.33]}
   rotation={[-0.87, 0.35, 0.39]}
   />

   <hemisphereLight
   name="Default Ambient Light"
   intensity={0.75}
   color="#eaeaea"
   />
   </group>
   </>
  )
}